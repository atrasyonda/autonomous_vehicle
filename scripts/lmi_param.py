import numpy as np

# Dynamic LQR Gain

# Q = 0.9*diag([0.66 0.01 0.33]); R = 0.1*diag([0.5 0.5]); --> BASED ON JURNAL

# GAIN DENGAN BENTUK MATRIKS Wi TIDAK DITENTUKAN & LMI > 0
# K1 = np.array([[-0.0000, 10.1605, -3.6332],
#                [-0.0652, -102.0535, -36.6814]])
# K2 = np.array([[-0.0000, 10.1604, -3.6329],
#                [-0.0652, -101.0677, -36.3028]])
# K3 = np.array([[-0.0000, -2.0465, -0.5647],
#                [-3.2295, -0.2165, 0.0104]])
# K4 = np.array([[0.0000, -2.0465, -0.5647],
#                [-3.2295, 0.2165, -0.0104]])
# K5 = np.array([[0.0000, 10.1604, -3.6329],
#                [-0.0652, 101.0677, 36.3028]])
# K6 = np.array([[0.0000, 10.1605, -3.6332],
#                [-0.0652, 102.0535, 36.6814]])
# K7 = np.array([[-0.0000, -2.0465, -0.5647],
#                [-3.2295, -0.2165, 0.0104]])
# K8 = np.array([[0.0000, -2.0465, -0.5647],
#                [-3.2295, 0.2165, -0.0104]])

# GAIN DENGAN BENTUK MATRIKS Wi YG DITENTUKAN & LMI > 0
# K1 = np.array([[0.0000, 10.1802, -3.6447],
#                [-0.0645, 0.0000, 0.0000]])
# K2 = np.array([[0.0000, 10.1802, -3.6444],
#                [-0.0645, 0.0000, 0.0000]])
# K3 = np.array([[0.0000, -1.9710, -0.5613],
#                [-3.1900, 0.0000, 0.0000]])
# K4 = np.array([[0.0000, -1.9710, -0.5613],
#                [-3.1900, 0.0000, 0.0000]])
# K5 = np.array([[0.0000, 10.1802, -3.6444],
#                [-0.0645, 0.0000, 0.0000]])
# K6 = np.array([[0.0000, 10.1802, -3.6447],
#                [-0.0645, 0.0000, 0.0000]])
# K7 = np.array([[0.0000, -1.9710, -0.5613],
#                [-3.1900, 0.0000, 0.0000]])
# K8 = np.array([[0.0000, -1.9710, -0.5613],
#                [-3.1900, 0.0000, 0.0000]])

# GAIN DENGAN BENTUK MATRIKS Wi YG DITENTUKAN & LMI > 0 & Matriks A dirubah deltanya
# K1 = np.array([[0, 1.0896, -10.5106],
#                [-0.0752, 0, 0]])
# K2 = np.array([[0, 1.0897, -10.5106],
#                [-0.0752, 0, 0]])
# K3 = np.array([[0, -1.9488, -0.6051],
#                [-3.7491, 0, 0]])
# K4 = np.array([[0, -1.9487, -0.6051],
#                [-3.7491, 0, 0]])
# K5 = np.array([[0, 1.0897, -10.5106],
#                [-0.0752, 0, 0]])
# K6 = np.array([[0, 1.0896, -10.5106],
#                [-0.0752, 0, 0]])
# K7 = np.array([[0, -1.9487, -0.6051],
#                [-3.7491, 0, 0]])
# K8 = np.array([[0, -1.9488, -0.6051],
#                [-3.7491, 0, 0]])

# GAIN DARI SOLUSI LQR
# K1 = np.array([[-3.8000, 1.9268, 15.5118],
#                [0.7999, -0.1131, 0.0054]])
# K2 = np.array([[-3.8147, 1.9279, 15.4835],
#                [0.8477, -0.1198, 0.0121]])
# K3 = np.array([[-0.2954, -55.6517, 73.3815],
#                [198.0595, -7.9811, 8.6384]])
# K4 = np.array([[0.2954, -55.6517, 73.3815],
#                [198.0595, 7.9811, -8.6384]])
# K5 = np.array([[3.8147, 1.9279, 15.4835],
#                [0.8477, 0.1198, -0.0121]])
# K6 = np.array([[3.8000, 1.9268, 15.5118],
#                [0.7999, 0.1131, -0.0054]])
# K7 = np.array([[-0.2954, -55.6517, 73.3815],
#                [198.0595, -7.9811, 8.6384]])
# K8 = np.array([[0.2954, -55.6517, 73.3815],
#                [198.0595, 7.9811, -8.6384]])

K1 = np.array([[0.0000, -18.3808, -1.3097],
               [-156.2109, 263.6055, -391.0813]])
K2 = np.array([[0.0000, -18.3612, -1.3300],
               [-156.2109, 403.3674, -537.6614]])
K3 = np.array([[0.0000, -2.4280, 0.1445],
               [-78.5026, 179.4039, -196.7626]])
K4 = np.array([[-0.0000, -2.4279, 0.1443],
               [-78.5026, -43.0824, 46.5318]])
K5 = np.array([[-0.0000, -18.3612, -1.3300],
               [-156.2109, -403.3674, 537.6614]])
K6 = np.array([[-0.0000, -18.3808, -1.3097],
               [-156.2109, -263.6055, 391.0813]])
K7 = np.array([[0.0000, -2.4279, 0.1443],
               [-78.5026, 43.0824, -46.5318]])
K8 = np.array([[-0.0000, -2.4280, 0.1445],
               [-78.5026, -179.4039, 196.7626]])


K_d = [K1, K2, K3, K4, K5, K6, K7, K8]

