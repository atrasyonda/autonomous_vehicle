import numpy as np

# Dynamic LQR Gain

# Q = 0.9*diag([0.66 0.01 0.33]); R = 0.1*diag([0.5 0.5]); --> BASED ON JURNAL

# GAIN DENGAN BENTUK MATRIKS Wi TIDAK DITENTUKAN & LMI > 0
# K1 = np.array([[-0.0000, 10.1605, -3.6332],
#                [-0.0652, -102.0535, -36.6814]])
# K2 = np.array([[-0.0000, 10.1604, -3.6329],
#                [-0.0652, -101.0677, -36.3028]])
# K3 = np.array([[-0.0000, -2.0465, -0.5647],
#                [-3.2295, -0.2165, 0.0104]])
# K4 = np.array([[0.0000, -2.0465, -0.5647],
#                [-3.2295, 0.2165, -0.0104]])
# K5 = np.array([[0.0000, 10.1604, -3.6329],
#                [-0.0652, 101.0677, 36.3028]])
# K6 = np.array([[0.0000, 10.1605, -3.6332],
#                [-0.0652, 102.0535, 36.6814]])
# K7 = np.array([[-0.0000, -2.0465, -0.5647],
#                [-3.2295, -0.2165, 0.0104]])
# K8 = np.array([[0.0000, -2.0465, -0.5647],
#                [-3.2295, 0.2165, -0.0104]])

# GAIN DENGAN BENTUK MATRIKS Wi TIDAK DITENTUKAN & LMI < 0
# K1 = np.array([[0.0000, 1.3719, -0.8684],
#                [-0.0002, 0.0087, 0.0067]])
# K2 = np.array([[0.0000, 1.3719, -0.8684],
#                [-0.0002, 0.0087, 0.0065]])
# K3 = np.array([[0.0000, -0.2774, -0.2094],
#                [-0.0099, -0.0000, 0.0001]])
# K4 = np.array([[0.0000, -0.2774, -0.2094],
#                [-0.0099, 0.0000, -0.0001]])
# K5 = np.array([[0.0000, 1.3719, -0.8684],
#                [-0.0002, -0.0087, -0.0065]])
# K6 = np.array([[0.0000, 1.3719, -0.8684],
#                [-0.0002, -0.0087, -0.0067]])
# K7 = np.array([[0.0000, -0.2774, -0.2094],
#                [-0.0099, -0.0000, 0.0001]])
# K8 = np.array([[0.0000, -0.2774, -0.2094],
#                [-0.0099, -0.0000, -0.0001]])

# GAIN DENGAN BENTUK MATRIKS Wi YG DITENTUKAN & LMI > 0
K1 = np.array([[0.0000, 10.1802, -3.6447],
               [-0.0645, 0.0000, 0.0000]])
K2 = np.array([[0.0000, 10.1802, -3.6444],
               [-0.0645, 0.0000, 0.0000]])
K3 = np.array([[0.0000, -1.9710, -0.5613],
               [-3.1900, 0.0000, 0.0000]])
K4 = np.array([[0.0000, -1.9710, -0.5613],
               [-3.1900, 0.0000, 0.0000]])
K5 = np.array([[0.0000, 10.1802, -3.6444],
               [-0.0645, 0.0000, 0.0000]])
K6 = np.array([[0.0000, 10.1802, -3.6447],
               [-0.0645, 0.0000, 0.0000]])
K7 = np.array([[0.0000, -1.9710, -0.5613],
               [-3.1900, 0.0000, 0.0000]])
K8 = np.array([[0.0000, -1.9710, -0.5613],
               [-3.1900, 0.0000, 0.0000]])

# GAIN DENGAN BENTUK MATRIKS Wi YG DITENTUKAN & LMI < 0
# K1 = np.array([[0.0000, 1.3719, -0.8684],
#                [-0.0002, -0.0000, 0.0000]])
# K2 = np.array([[0.0000, 1.3719, -0.8684],
#                [-0.0002, -0.0000, 0.0000]])
# K3 = np.array([[0.0000, -0.2774, -0.2094],
#                [-0.0099, -0.0000, 0.0000]])
# K4 = np.array([[0.0000, -0.2774, -0.2094],
#                [-0.0099, -0.0000, 0.0000]])
# K5 = np.array([[0.0000, 1.3719, -0.8684],
#                [-0.0002, -0.0000, 0.0000]])
# K6 = np.array([[0.0000, 1.3719, -0.8684],
#                [-0.0002, -0.0000, 0.0000]])
# K7 = np.array([[0.0000, -0.2774, -0.2094],
#                [-0.0099, -0.0000, 0.0000]])
# K8 = np.array([[0.0000, -0.2774, -0.2094],
#                [-0.0099, -0.0000, 0.0000]])


K_d = [K1, K2, K3, K4, K5, K6, K7, K8]

K_lqr = np.array([
    [-3.8, 1.9268, 15.5118],
    [0.7999, -0.1131, 0.0054]
])